{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "findHospital",
    "fullyQualifiedName": "find_hospitalJS.findHospital",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Hospital",
    "collectionId": "Hospital_find_hospitalJS",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const result1 = await find_hospitalID.run();\n  const result2 = await find_hospital.run();\n  if (result1.length == 0 && result2.length == 0) {\n    await add_hospital.run();\n    closeModal('add_hospital_modal');\n    get_hospital.run();\n  } else {\n    showAlert('The hospital is already exists');\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const result1 = await find_hospitalID.run();\n  const result2 = await find_hospital.run();\n  if (result1.length == 0 && result2.length == 0) {\n    await add_hospital.run();\n    closeModal('add_hospital_modal');\n    get_hospital.run();\n  } else {\n    showAlert('The hospital is already exists');\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Hospital_find_hospitalJS.findHospital",
  "deleted": false,
  "gitSyncId": "6356520d4b1a8d4291238688_6363c13bbaf07e59ff351554"
}